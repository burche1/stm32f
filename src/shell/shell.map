
Allocating common symbols
Common symbol       size              file

jiffies             0x8               crt0.o

Discarded input sections

 .group         0x0000000000000000        0x8 stream.o
 .group         0x0000000000000000        0x8 stream.o
 .group         0x0000000000000000        0x8 stream.o
 .group         0x0000000000000000        0x8 stream.o
 .group         0x0000000000000000        0x8 stream.o
 .group         0x0000000000000000        0x8 stream.o

Memory Configuration

Name             Origin             Length             Attributes
flash            0x0000000008000000 0x0000000000020000 xr
sram             0x0000000020000000 0x0000000000005000 awl
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map


.text           0x0000000008000000     0x17f0
 *(.vect)
 .vect          0x0000000008000000      0x150 crt0.o
                0x0000000008000000                vector_table
 *(.text*)
 .text          0x0000000008000150       0x7c crt0.o
                0x0000000008000150                __adc1_handler
                0x0000000008000154                __usart1_handler
                0x0000000008000158                __systick_handler
                0x000000000800017c                __main
                0x0000000008000198                enable_interrupt
                0x00000000080001b0                disable_interrupt
 .text          0x00000000080001cc      0x1c8 main.o
                0x00000000080001cc                __aeabi_unwind_cpp_pr0
                0x00000000080001d0                __aeabi_unwind_cpp_pr1
                0x00000000080001d4                delay_ms(int)
                0x0000000008000200                gpio_mode(stm32f103::GPIO volatile*, stm32f103::GPIO_PIN, stm32f103::GPIO_CNF, stm32f103::GPIO_MODE)
                0x000000000800024c                init_systick(unsigned int, bool)
                0x0000000008000280                serial_puts
                0x0000000008000294                serial_putc
                0x00000000080002a8                systick_handler
                0x0000000008000380                memset
 .text.startup  0x0000000008000394      0x2dc main.o
                0x0000000008000394                main
 .text          0x0000000008000670      0x430 prf.o
                0x00000000080006c8                printf
 .text          0x0000000008000aa0       0x3c spi.o
                0x0000000008000aa0                stm32f103::spi::init(stm32f103::SPI_BASE)
                0x0000000008000ab4                stm32f103::spi::operator<<(unsigned short)
 .text          0x0000000008000adc      0x1dc uart.o
                0x0000000008000adc                stm32f103::uart::uart()
                0x0000000008000adc                stm32f103::uart::uart()
                0x0000000008000ae8                stm32f103::uart::init(stm32f103::USART_BASE, stm32f103::uart::parity, int, unsigned int, unsigned int)
                0x0000000008000b68                stm32f103::uart::operator<<(char const*)
                0x0000000008000b98                stm32f103::uart::putc(int)
                0x0000000008000ba4                stm32f103::uart::getc()
                0x0000000008000c58                stm32f103::uart::gets(char*, unsigned int)
                0x0000000008000c9c                uart1_handler
 .text          0x0000000008000cb8      0x328 stream.o
                0x0000000008000cb8                stream::stream(stm32f103::uart&)
                0x0000000008000cb8                stream::stream(stm32f103::uart&)
                0x0000000008000cbc                stream::operator<<(char const*)
                0x0000000008000ccc                stream::operator<<(signed char)
                0x0000000008000d3c                stream::operator<<(unsigned char)
                0x0000000008000d84                stream::operator<<(short)
                0x0000000008000df4                stream::operator<<(unsigned short)
                0x0000000008000e3c                stream::operator<<(int)
                0x0000000008000ea8                stream::operator<<(unsigned int)
                0x0000000008000eec                stream::operator<<(long long)
                0x0000000008000f64                stream::operator<<(unsigned long long)
                0x0000000008000fdc                stream::flush()
 .text          0x0000000008000fe0       0xc0 command_processor.o
                0x0000000008000fe0                command_processor::command_processor()
                0x0000000008000fe0                command_processor::command_processor()
                0x0000000008000fe4                command_processor::operator()(unsigned int, char const**) const
 .text          0x00000000080010a0      0x620 can.o
                0x00000000080010a0                stm32f103::can::can()
                0x00000000080010a0                stm32f103::can::can()
                0x00000000080010c4                stm32f103::can::init_enter()
                0x0000000008001124                stm32f103::can::init_leave()
                0x0000000008001184                stm32f103::can::init(stm32f103::PERIPHERAL_BASE)
                0x0000000008001264                stm32f103::can::set_mode(unsigned int)
                0x0000000008001290                stm32f103::can::filter(unsigned char, CAN_FIFO, CAN_FILTER_SCALE, CAN_FILTER_MODE, unsigned int, unsigned int)
                0x000000000800132c                stm32f103::can::transmit(CanMsg*)
                0x00000000080013d8                stm32f103::can::tx_status(CAN_TX_MBX)
                0x0000000008001460                stm32f103::can::cancel(unsigned char)
                0x0000000008001490                stm32f103::can::rx_queue_clear()
                0x000000000800149c                stm32f103::can::rx_available()
                0x00000000080014a0                stm32f103::can::rx_queue_get()
                0x00000000080014b4                stm32f103::can::rx_queue_free()
                0x00000000080014cc                stm32f103::can::read(CAN_FIFO, CanMsg*)
                0x0000000008001544                stm32f103::can::rx_release(CAN_FIFO)
                0x000000000800155c                stm32f103::can::rx_read(CAN_FIFO)
                0x00000000080015ac                stm32f103::can::rx_read(stm32f103::CAN*, CAN_FIFO)
                0x00000000080015c8                can1_rx0_handler
                0x0000000008001650                can1_tx_handler
 *(.rodata*)
 .rodata.str1.4
                0x00000000080016c0       0x4e main.o
 *fill*         0x000000000800170e        0x2 
 .rodata.str1.4
                0x0000000008001710       0x11 prf.o
 *fill*         0x0000000008001721        0x3 
 .rodata.str1.4
                0x0000000008001724       0x14 spi.o
 .rodata.str1.4
                0x0000000008001738       0x12 stream.o
 *fill*         0x000000000800174a        0x2 
 .rodata.str1.4
                0x000000000800174c       0x4a command_processor.o
                                         0x52 (size before relaxing)
 *fill*         0x0000000008001796        0x2 
 .rodata.str1.4
                0x0000000008001798       0x58 can.o
                                         0x5c (size before relaxing)
                0x00000000080017f0                . = ALIGN (0x4)

.data           0x00000000080017f0        0x0
 .data          0x00000000080017f0        0x0 crt0.o
 .data          0x00000000080017f0        0x0 main.o
 .data          0x00000000080017f0        0x0 prf.o
 .data          0x00000000080017f0        0x0 spi.o
 .data          0x00000000080017f0        0x0 uart.o
 .data          0x00000000080017f0        0x0 stream.o
 .data          0x00000000080017f0        0x0 command_processor.o
 .data          0x00000000080017f0        0x0 can.o

.igot.plt       0x00000000080017f0        0x0
 .igot.plt      0x00000000080017f0        0x0 crt0.o

.got            0x00000000080017f0       0x20
 .got           0x00000000080017f0       0x20 crt0.o

.got.plt        0x0000000008001810        0xc
 .got.plt       0x0000000008001810        0xc crt0.o
                0x0000000008001810                _GLOBAL_OFFSET_TABLE_

.init_array     0x000000000800181c        0x4
 .init_array    0x000000000800181c        0x4 main.o

.data.rel.local._ZZNK8stream_tclIjEEvRN9stm32f1034uartET_E9__chars__
                0x0000000008001820        0x4
 .data.rel.local._ZZNK8stream_tclIjEEvRN9stm32f1034uartET_E9__chars__
                0x0000000008001820        0x4 stream.o
                0x0000000008001820                void stream_t::operator()<unsigned int>(stm32f103::uart&, unsigned int) const::__chars__

.data.rel.local._ZZNK8stream_tclIiEEvRN9stm32f1034uartET_E9__chars__
                0x0000000008001824        0x4
 .data.rel.local._ZZNK8stream_tclIiEEvRN9stm32f1034uartET_E9__chars__
                0x0000000008001824        0x4 stream.o
                0x0000000008001824                void stream_t::operator()<int>(stm32f103::uart&, int) const::__chars__

.data.rel.local._ZZNK8stream_tclItEEvRN9stm32f1034uartET_E9__chars__
                0x0000000008001828        0x4
 .data.rel.local._ZZNK8stream_tclItEEvRN9stm32f1034uartET_E9__chars__
                0x0000000008001828        0x4 stream.o
                0x0000000008001828                void stream_t::operator()<unsigned short>(stm32f103::uart&, unsigned short) const::__chars__

.data.rel.local._ZZNK8stream_tclIsEEvRN9stm32f1034uartET_E9__chars__
                0x000000000800182c        0x4
 .data.rel.local._ZZNK8stream_tclIsEEvRN9stm32f1034uartET_E9__chars__
                0x000000000800182c        0x4 stream.o
                0x000000000800182c                void stream_t::operator()<short>(stm32f103::uart&, short) const::__chars__

.data.rel.local._ZZNK8stream_tclIhEEvRN9stm32f1034uartET_E9__chars__
                0x0000000008001830        0x4
 .data.rel.local._ZZNK8stream_tclIhEEvRN9stm32f1034uartET_E9__chars__
                0x0000000008001830        0x4 stream.o
                0x0000000008001830                void stream_t::operator()<unsigned char>(stm32f103::uart&, unsigned char) const::__chars__

.data.rel.local._ZZNK8stream_tclIaEEvRN9stm32f1034uartET_E9__chars__
                0x0000000008001834        0x4
 .data.rel.local._ZZNK8stream_tclIaEEvRN9stm32f1034uartET_E9__chars__
                0x0000000008001834        0x4 stream.o
                0x0000000008001834                void stream_t::operator()<signed char>(stm32f103::uart&, signed char) const::__chars__

.glue_7         0x0000000008001838        0x0
 .glue_7        0x0000000008001838        0x0 linker stubs

.glue_7t        0x0000000008001838        0x0
 .glue_7t       0x0000000008001838        0x0 linker stubs

.vfp11_veneer   0x0000000008001838        0x0
 .vfp11_veneer  0x0000000008001838        0x0 linker stubs

.v4_bx          0x0000000008001838        0x0
 .v4_bx         0x0000000008001838        0x0 linker stubs

.iplt           0x0000000008001838        0x0
 .iplt          0x0000000008001838        0x0 crt0.o

.rel.dyn        0x0000000008001838        0x0
 .rel.iplt      0x0000000008001838        0x0 crt0.o
 .rel.got       0x0000000008001838        0x0 crt0.o

.ARM.extab      0x0000000008001838        0x0
 .ARM.extab     0x0000000008001838        0x0 main.o
 .ARM.extab     0x0000000008001838        0x0 spi.o
 .ARM.extab     0x0000000008001838        0x0 uart.o
 .ARM.extab     0x0000000008001838        0x0 stream.o
 .ARM.extab     0x0000000008001838        0x0 command_processor.o
 .ARM.extab     0x0000000008001838        0x0 can.o

.ARM.exidx      0x0000000008001838       0x98
 .ARM.exidx     0x0000000008001838        0x8 main.o
                                         0x48 (size before relaxing)
 .ARM.exidx     0x0000000008001840        0x8 spi.o
                                         0x10 (size before relaxing)
 .ARM.exidx     0x0000000008001848       0x18 uart.o
                                         0x38 (size before relaxing)
 .ARM.exidx     0x0000000008001860       0x28 stream.o
                                         0x58 (size before relaxing)
 .ARM.exidx     0x0000000008001888        0x8 command_processor.o
                                         0x10 (size before relaxing)
 .ARM.exidx     0x0000000008001890       0x40 can.o
                                         0x98 (size before relaxing)

.ARM.extab.text.startup
                0x00000000080018d0        0x0
 .ARM.extab.text.startup
                0x00000000080018d0        0x0 main.o

.ARM.exidx.text.startup
                0x00000000080018d0       0x10
 .ARM.exidx.text.startup
                0x00000000080018d0       0x10 main.o

.bss            0x0000000020000000       0x38
                0x0000000020000000                . = ALIGN (0x4)
 *(.bss*)
 .bss           0x0000000020000000        0x0 crt0.o
 .bss           0x0000000020000000       0x1c main.o
                0x0000000020000000                atomic_jiffies
                0x0000000020000004                atomic_milliseconds
                0x0000000020000008                atomic_seconds
                0x000000002000000c                __uart0
                0x0000000020000014                __spi0
 .bss           0x000000002000001c        0x0 prf.o
 .bss           0x000000002000001c        0x0 spi.o
 .bss           0x000000002000001c        0x5 uart.o
 .bss           0x0000000020000021        0x0 stream.o
 .bss           0x0000000020000021        0x0 command_processor.o
 *fill*         0x0000000020000021        0x3 
 .bss           0x0000000020000024        0x8 can.o
 *(COMMON)
 *fill*         0x000000002000002c        0x4 
 COMMON         0x0000000020000030        0x8 crt0.o
                0x0000000020000030                jiffies
                0x0000000020000038                . = ALIGN (0x4)
LOAD crt0.o
LOAD main.o
LOAD prf.o
LOAD spi.o
LOAD uart.o
LOAD stream.o
LOAD command_processor.o
LOAD can.o
OUTPUT(shell.elf elf32-littlearm)

.debug_info     0x0000000000000000     0xf296
 .debug_info    0x0000000000000000      0x53c crt0.o
 .debug_info    0x000000000000053c     0x4da1 main.o
 .debug_info    0x00000000000052dd      0x617 prf.o
 .debug_info    0x00000000000058f4      0x660 spi.o
 .debug_info    0x0000000000005f54     0x449b uart.o
 .debug_info    0x000000000000a3ef     0x1418 stream.o
 .debug_info    0x000000000000b807     0x2458 command_processor.o
 .debug_info    0x000000000000dc5f     0x1637 can.o

.debug_abbrev   0x0000000000000000     0x26c7
 .debug_abbrev  0x0000000000000000      0x167 crt0.o
 .debug_abbrev  0x0000000000000167      0x966 main.o
 .debug_abbrev  0x0000000000000acd      0x1f6 prf.o
 .debug_abbrev  0x0000000000000cc3      0x240 spi.o
 .debug_abbrev  0x0000000000000f03      0x92a uart.o
 .debug_abbrev  0x000000000000182d      0x422 stream.o
 .debug_abbrev  0x0000000000001c4f      0x559 command_processor.o
 .debug_abbrev  0x00000000000021a8      0x51f can.o

.debug_loc      0x0000000000000000     0x2503
 .debug_loc     0x0000000000000000       0x42 crt0.o
 .debug_loc     0x0000000000000042      0x804 main.o
 .debug_loc     0x0000000000000846      0x88b prf.o
 .debug_loc     0x00000000000010d1       0x42 spi.o
 .debug_loc     0x0000000000001113      0x38a uart.o
 .debug_loc     0x000000000000149d      0x7a3 stream.o
 .debug_loc     0x0000000000001c40      0x111 command_processor.o
 .debug_loc     0x0000000000001d51      0x7b2 can.o

.debug_aranges  0x0000000000000000      0x110
 .debug_aranges
                0x0000000000000000       0x20 crt0.o
 .debug_aranges
                0x0000000000000020       0x30 main.o
 .debug_aranges
                0x0000000000000050       0x20 prf.o
 .debug_aranges
                0x0000000000000070       0x20 spi.o
 .debug_aranges
                0x0000000000000090       0x20 uart.o
 .debug_aranges
                0x00000000000000b0       0x20 stream.o
 .debug_aranges
                0x00000000000000d0       0x20 command_processor.o
 .debug_aranges
                0x00000000000000f0       0x20 can.o

.debug_line     0x0000000000000000     0x187b
 .debug_line    0x0000000000000000       0x8a crt0.o
 .debug_line    0x000000000000008a      0x5fe main.o
 .debug_line    0x0000000000000688      0x199 prf.o
 .debug_line    0x0000000000000821      0x12b spi.o
 .debug_line    0x000000000000094c      0x4fa uart.o
 .debug_line    0x0000000000000e46      0x2da stream.o
 .debug_line    0x0000000000001120      0x3e9 command_processor.o
 .debug_line    0x0000000000001509      0x372 can.o

.debug_str      0x0000000000000000     0x60f2
 .debug_str     0x0000000000000000      0x636 crt0.o
                                        0x67d (size before relaxing)
 .debug_str     0x0000000000000636     0x2e32 main.o
                                       0x32d3 (size before relaxing)
 .debug_str     0x0000000000003468       0x74 prf.o
                                        0x16b (size before relaxing)
 .debug_str     0x00000000000034dc       0x4a spi.o
                                        0x3f1 (size before relaxing)
 .debug_str     0x0000000000003526     0x1cf3 uart.o
                                       0x39b0 (size before relaxing)
 .debug_str     0x0000000000005219      0x2f8 stream.o
                                        0xdac (size before relaxing)
 .debug_str     0x0000000000005511       0x31 command_processor.o
                                       0x1591 (size before relaxing)
 .debug_str     0x0000000000005542      0xbb0 can.o
                                        0xfb9 (size before relaxing)

.comment        0x0000000000000000       0x26
 .comment       0x0000000000000000       0x26 crt0.o
                                         0x27 (size before relaxing)
 .comment       0x0000000000000026       0x27 main.o
 .comment       0x0000000000000026       0x27 prf.o
 .comment       0x0000000000000026       0x27 spi.o
 .comment       0x0000000000000026       0x27 uart.o
 .comment       0x0000000000000026       0x27 stream.o
 .comment       0x0000000000000026       0x27 command_processor.o
 .comment       0x0000000000000026       0x27 can.o

.note.GNU-stack
                0x0000000000000000        0x0
 .note.GNU-stack
                0x0000000000000000        0x0 crt0.o
 .note.GNU-stack
                0x0000000000000000        0x0 main.o
 .note.GNU-stack
                0x0000000000000000        0x0 prf.o
 .note.GNU-stack
                0x0000000000000000        0x0 spi.o
 .note.GNU-stack
                0x0000000000000000        0x0 uart.o
 .note.GNU-stack
                0x0000000000000000        0x0 stream.o
 .note.GNU-stack
                0x0000000000000000        0x0 command_processor.o
 .note.GNU-stack
                0x0000000000000000        0x0 can.o

.ARM.attributes
                0x0000000000000000       0x37
 .ARM.attributes
                0x0000000000000000       0x37 crt0.o
 .ARM.attributes
                0x0000000000000037       0x37 main.o
 .ARM.attributes
                0x000000000000006e       0x37 prf.o
 .ARM.attributes
                0x00000000000000a5       0x37 spi.o
 .ARM.attributes
                0x00000000000000dc       0x37 uart.o
 .ARM.attributes
                0x0000000000000113       0x37 stream.o
 .ARM.attributes
                0x000000000000014a       0x37 command_processor.o
 .ARM.attributes
                0x0000000000000181       0x37 can.o

.debug_frame    0x0000000000000000      0x6f8
 .debug_frame   0x0000000000000000       0x70 crt0.o
 .debug_frame   0x0000000000000070      0x100 main.o
 .debug_frame   0x0000000000000170       0xa0 prf.o
 .debug_frame   0x0000000000000210       0x3c spi.o
 .debug_frame   0x000000000000024c       0xc4 uart.o
 .debug_frame   0x0000000000000310      0x17c stream.o
 .debug_frame   0x000000000000048c       0x4c command_processor.o
 .debug_frame   0x00000000000004d8      0x220 can.o

.debug_ranges   0x0000000000000000      0x7e8
 .debug_ranges  0x0000000000000000      0x370 main.o
 .debug_ranges  0x0000000000000370       0xb8 prf.o
 .debug_ranges  0x0000000000000428       0x20 spi.o
 .debug_ranges  0x0000000000000448       0xf0 uart.o
 .debug_ranges  0x0000000000000538      0x158 stream.o
 .debug_ranges  0x0000000000000690       0x20 command_processor.o
 .debug_ranges  0x00000000000006b0      0x138 can.o
